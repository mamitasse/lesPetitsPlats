// Interface utilisateur (HTML, CSS, JavaScript)
Créer une page HTML avec :
  - Une barre de recherche principale
  - Trois boutons pour choisir la recherche par ingrédients, ustensiles ou appareils
  avec menu deroulant:
       *barre de recherche*
       * Trois listes filtrables (ingrédients, ustensiles, appareils)
  - Une zone pour afficher les résultats


Utiliser CSS pour styliser la page

// JavaScript (Fonctions de gestion)

// Données en mémoire
recipes = [ { title, ingredients, appliances, ustensils }, ... ] // les données de recettes
ingredientsList = [] // Liste d'ingrédients initialisée à partir de vos données
ustensilsList = [] // Liste d'ustensiles initialisée à partir de vos données
appareilsList = [] // Liste d'appareils initialisée à partir de vos données



Utiliser JavaScript pour gérer les événements :
- Gérer la saisie dans les barres de recherche principale
- Gérer la saisie dans les barres de recherche spécifiques
- Gérer les clics sur les boutons de recherche
- Gérer les clics sur les éléments des listes d'ingrédients, d'ustensiles et d'appareils

************************- Gérer la saisie dans les barres de recherche principale**********************************************

// Fonction pour gérer la recherche principale (par exemple, pour les titres de recettes, appareils, ingrédients et ustensiles)
function rechercherPrincipal(termeRecherche) {
  // Initialiser une liste vide pour stocker les recettes correspondantes
  recettesCorrespondantes = []

  // Convertir le terme de recherche en minuscules pour une correspondance insensible à la casse
  termeRecherche = termeRecherche.toLowerCase()

  // Parcourir toutes les recettes
  pour chaque recette dans recipes {
    // Vérifier si le terme de recherche est inclus dans le titre, les ingrédients, les ustensiles ou les appareils de la recette
    si (recette.title.toLowerCase().includes(termeRecherche) ||
        recette.ingredients.some(ingrédient => ingrédient.toLowerCase().includes(termeRecherche)) ||
        recette.ustensils.some(ustensile => ustensile.toLowerCase().includes(termeRecherche)) ||
        recette.appliances.toLowerCase().includes(termeRecherche)) {
      // Si le terme de recherche est inclus, ajouter cette recette à la liste des recettes correspondantes
      recettesCorrespondantes.push(recette)
    }
  }

  // Afficher les recettes correspondantes dans la zone de résultats
  afficherResultats(recettesCorrespondantes)
}

******************************-creation des honctions afficher resultat de filtration****************



// JavaScript (Fonctions de gestion)
// Fonction pour afficher les résultats dans la zone de résultats
function afficherResultats(resultats) {
  // Mettre en œuvre l'affichage des résultats dans l'interface utilisateur
}

// Fonction pour filtrer une liste en fonction de la saisie
function filtrerListe(liste, saisie) {
  // Initialiser une nouvelle liste vide pour stocker les éléments filtrés
  elementsFiltres = []

  // Convertir la saisie de l'utilisateur en minuscules pour une correspondance insensible à la casse
  saisie = saisie.toLowerCase()

  // Parcourir tous les éléments de la liste
  pour chaque élément dans liste {
    // Convertir l'élément en minuscules pour une correspondance insensible à la casse
    élémentMinuscule = élément.toLowerCase()

    // Vérifier si l'élément commence par la saisie de l'utilisateur
    si (élémentMinuscule.startsWith(saisie)) {
      // Si l'élément commence par la saisie, ajouter cet élément à la liste filtrée
      elementsFiltres.push(élément)
    }
  }

  // Retourner la liste filtrée
  retourner elementsFiltres
}

**********************************- Gérer la saisie dans les barres de recherche spécifiques**************************************
//////////////INGREDIENT////////////////
///faire pareil pour ustensile et appareil///


// Fonction pour rechercher des recettes par ingrédient
function rechercherRecettesParIngredient(ingredient) {
  // Initialiser une liste vide pour stocker les recettes correspondantes
  recettesCorrespondantes = []

  // Convertir l'ingrédient en minuscules pour une correspondance insensible à la casse
  ingredient = ingredient.toLowerCase()

  // Parcourir toutes les recettes
  pour chaque recette dans recipes {
    // Vérifier si l'ingrédient est inclus dans les ingrédients de la recette
    si (recette.ingredients.includes(ingredient)) {
      // Si l'ingrédient est inclus, ajouter cette recette à la liste des recettes correspondantes
      recettesCorrespondantes.push(recette)
    }
  }

  // Afficher les recettes correspondantes dans la zone de résultats
  afficherResultats(recettesCorrespondantes)
}



// Gérer les événements de clic sur les éléments des listes d'ingrédients, d'ustensiles et d'appareils
pour chaque élément dans la liste d'ingrédients {
  élément.addEventListener('clic', function() {
    rechercherRecettesParIngredient(élément)
  })
}

pour chaque élément dans la liste d'ustensiles {
  élément.addEventListener('clic', function() {
    // Mettre en œuvre la recherche par ustensile si nécessaire
  })
}

pour chaque élément dans la liste d'ustensiles {
  élément.addEventListener('clic', function() {
    // Mettre en œuvre la recherche par ustensile si nécessaire
  })
}

pour chaque élément dans la liste d'appareils {
  élément.addEventListener('clic', function() {
    // Mettre en œuvre la recherche par appareil si nécessaire
  })
}

